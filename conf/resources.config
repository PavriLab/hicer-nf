/*
* MIT License
*
* Copyright (c) 2019 Tobias Neumann, Daniel Malzl
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

/*
Resource management
*/

process {

    // error strategy
    maxRetries = 3

    // basic resources
    cpus = 1
    time = { 1.h * task.attempt }
    memory = { 1.GB * task.attempt }

    // process-specific resources
    withName: buildBowtie2Index {
        cpus = 12
        memory = { 20.GB * task.attempt }
        time = { 4.h * task.attempt }
    }
    withName: makeHicDigest {
        cpus = 4
        memory = { 5.GB * task.attempt }
        time = { 1.h * task.attempt }
    }
    withName: trim {
        cpus = 8
        time = { 4.h * task.attempt }
    }
    withName: hicup {
        cpus = 24
        memory = { 50.GB * task.attempt }
        time = { 30.h * task.attempt }
        clusterOptions = '--qos=medium'
    }
    withName: insertSize {
        cpus = 8
        memory = { 10.GB * task.attempt }
        time = { 5.h * task.attempt }
    }
    withName: bamPreparation {
        cpus = 8
        memory = { 30.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withName: matrixBuilder {
        cpus = 22
        memory = { 200.GB * task.attempt }
        time = { 4.h * task.attempt }
        clusterOptions = '--partition=m'
    }
    withName: matrixResolutioner {
        cpus = 6
        memory = { 30.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withName: matrixSubsetter {
        cpus = 6
        memory = { 60.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withName: matrixNormalizer {
        cpus = 24
        memory = { 50.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withName: matrixOE {
        cpus = 10
        memory = { 50.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withName: mcoolBuilder {
        cpus = 6
        memory = { 60.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
}

timeline {
	enabled = true
}

report {
	enabled = true
}
